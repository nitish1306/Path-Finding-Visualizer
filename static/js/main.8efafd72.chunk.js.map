{"version":3,"sources":["../node_modules/typescript/lib sync","components/node.jsx","components/bfs.jsx","components/Greedy.jsx","components/Astar.jsx","components/Grid.jsx","components/App.jsx","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","node","props","onMouseDown","isStart","c","isEnd","d","togst","rowid","colid","setc","togen","setd","setbool","onMouseEnter","bool","Clicks","onMouseUp","onClick","className","isWall","ispath","isVisited","isExplored","test","board","markVisited","markExplored","markPath","t","start","end","time","i","j","dx","dy","dist","prev","distRow","prevRow","push","Infinity","queue","length","sz","curr","shift","setTimeout","st","next","dijk","distance","x1","y1","x2","y2","console","log","Math","abs","dis","index","temp","astar","xxdist","xrow","Grid","useState","setC","setD","arr","eachrow","parent","grid","setGrid","setBool","setTest","check","setcv","setdv","random","handleClick","x","y","val","f","a","clr","markVis","markexplored","markpath","map","row","col","Bfs","Greedy","Astar","resboard","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8efafd72.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 235;","import React, {useState} from \"react\";\r\n\r\nfunction node(props){\r\n    function local1(){\r\n        if(props.isStart==false && !props.c){\r\n            if(props.isEnd==false && !props.d)return true;\r\n        }\r\n        if(props.isStart==true){\r\n            props.togst([props.rowid,props.colid]);\r\n            props.setc(true);\r\n            return false;\r\n        }\r\n        else if(props.isEnd==true){\r\n            props.togen([props.rowid,props.colid]);\r\n            props.setd(true);\r\n            return false;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    }\r\n    function local2(){\r\n        if(props.c)props.togst([props.rowid,props.colid]);\r\n        if(props.d)props.togen([props.rowid,props.colid]);\r\n        return true;\r\n    }\r\n    function local3(){\r\n        if(props.c){props.setc(false);}\r\n        if(props.d){props.setd(false);}\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div  \r\n             onMouseDown={() => local1() && props.setbool(true)} \r\n             onMouseEnter={() => local2() && props.bool &&  props.Clicks([props.rowid,props.colid])}\r\n            //  onMouseDrop={()=> local2()}\r\n             onMouseUp={() => local3() && props.setbool(false)} \r\n             onClick={() =>  props.Clicks([props.rowid,props.colid])}\r\n\r\n        className={props.isEnd? \"box en\": \r\n                    (props.isStart? \"box st\":\r\n                        (props.isWall?\"box wall\":\r\n                            (props.ispath?\"box path\":\r\n                                (props.isVisited?\"box vis\":\r\n                                    (props.isExplored?\"box q\":\"box\"\r\n                                    )\r\n                                )\r\n                            )\r\n                        )\r\n                    )\r\n                    }> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default node;","import React from \"react\";\r\n\r\nfunction test(board, markVisited, markExplored, markPath,t){\r\n    const ROW_SIZE = 15;\r\n    const COLUMN_SIZE = 49;\r\n    let start=[];\r\n    let end=[];\r\n    let time=0;\r\n    for(let i=0; i<ROW_SIZE ; i++)\r\n    {\r\n        for(let j=0; j<COLUMN_SIZE; j++)\r\n        {\r\n            if(board[i][j].isStart)start=[i,j];\r\n            else if(board[i][j].isEnd)end=[i,j];\r\n            if(board[i][j].isStart || board[i][j].isEnd){\r\n                board[i][j].isVisited=false;\r\n                board[i][j].isExplored=false;\r\n                board[i][j].ispath=false;\r\n            }\r\n        }\r\n    }\r\n    const dx = [0, 1, 0, -1],\r\n      dy = [1, 0, -1, 0];\r\n  \r\n    let dist = [],\r\n      prev = [];\r\n    for (let i = 0; i < ROW_SIZE; i++) {\r\n      let distRow = [],\r\n        prevRow = [];\r\n      for (let j = 0; j < COLUMN_SIZE; j++) {\r\n        distRow.push(Infinity);\r\n        prevRow.push([i, j]);\r\n      }\r\n      dist.push(distRow);\r\n      prev.push(prevRow);\r\n    }\r\n  \r\n    dist[start[0]][start[1]] = 0;\r\n  \r\n    let queue = [];\r\n    queue.push(start);\r\n    while (queue.length > 0) {\r\n      let sz = queue.length;\r\n      for (let i = 0; i < sz; i++) {\r\n        let curr = queue.shift();\r\n        setTimeout(() => markVisited(curr), time);\r\n        time+=t;\r\n        if (curr[0] === end[0] && curr[1] === end[1]) {\r\n          curr = prev[curr[0]][curr[1]];\r\n          let st =[];\r\n          st.push(curr);\r\n          while (true) {\r\n            st.push(curr);\r\n            if (curr === start) {\r\n              for(let j = st.length-1 ; j>=0; j--){\r\n                setTimeout(() => markPath(st[j]), time);\r\n                time+=t;\r\n              }\r\n              return;\r\n            }\r\n            curr = prev[curr[0]][curr[1]];\r\n          }\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n          let next = [curr[0] + dx[i], curr[1] + dy[i]];\r\n          if (\r\n            next[0] >= 0 &&\r\n            next[0] < ROW_SIZE &&\r\n            next[1] >= 0 &&\r\n            next[1] < COLUMN_SIZE &&\r\n            !board[next[0]][next[1]].isWall &&\r\n            !board[next[0]][next[1]].isVisited &&\r\n            dist[next[0]][next[1]] > 1 + dist[curr[0]][curr[1]]\r\n          ) {\r\n            queue.push(next);\r\n            prev[next[0]][next[1]] = curr;\r\n            dist[next[0]][next[1]] = 1 + dist[curr[0]][curr[1]];\r\n            setTimeout(() => markExplored(next), time);\r\n            time+=t;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setTimeout(() => markPath(start), time);\r\n    time+=t;\r\n  };\r\n  \r\n  export default test;","import React from \"react\";\r\n\r\nfunction dijk(board, markVisited, markExplored, markPath,t){\r\n    const ROW_SIZE = 15;\r\n    const COLUMN_SIZE = 49;\r\n    let start=[];\r\n    let end=[];\r\n    let time=0;\r\n    for(let i=0; i<ROW_SIZE ; i++)\r\n    {\r\n        for(let j=0; j<COLUMN_SIZE; j++)\r\n        {\r\n            if(board[i][j].isStart)start=[i,j];\r\n            else if(board[i][j].isEnd)end=[i,j];\r\n            if(board[i][j].isStart || board[i][j].isEnd){\r\n                board[i][j].isVisited=false;\r\n                board[i][j].isExplored=false;\r\n                board[i][j].ispath=false;\r\n                board[i][j].isWall=false;\r\n            }\r\n        }\r\n    }\r\n    function distance(x1,y1,x2,y2){\r\n        console.log(Math.abs(x1-x2)+Math.abs(y1-y2));\r\n        return (Math.abs(x1-x2)+Math.abs(y1-y2));\r\n    }\r\n\r\n    const dx = [0, 1, 0, -1],\r\n      dy = [1, 0, -1, 0];\r\n  \r\n    let dist = [],\r\n      prev = [];\r\n    for (let i = 0; i < ROW_SIZE; i++) {\r\n      let distRow = [],\r\n        prevRow = [];\r\n      for (let j = 0; j < COLUMN_SIZE; j++) {\r\n        distRow.push(Infinity);\r\n        prevRow.push([i, j]);\r\n      }\r\n      dist.push(distRow);\r\n      prev.push(prevRow);\r\n    }\r\n  \r\n    dist[start[0]][start[1]] = 0;\r\n  \r\n    let queue = [];\r\n    queue.push(start);\r\n    while (queue.length > 0) {\r\n        let sz = queue.length;\r\n        const [x1,y1]=queue[0];\r\n        // let c= queue[0];\r\n        let dis = distance(x1,y1,end[0],end[1]);\r\n        let j=1,index=0;\r\n        for(;j<sz;j++){\r\n            let [x1,y1]= queue[j];\r\n            if(dis>distance(x1,y1,end[0],end[1]))\r\n            {\r\n                dis=distance(x1,y1,end[0],end[1]);\r\n                // c=queue[j];\r\n                index=j;\r\n            }\r\n        }\r\n        let temp = queue[0];\r\n        queue[0]=queue[index];\r\n        queue[index]=temp;\r\n        let curr = queue.shift();\r\n        console.log(curr);\r\n        //   console.log(curr[0]);\r\n          setTimeout(() => markVisited(curr), time);\r\n          time+=t;\r\n          //path found \r\n          if (curr[0] === end[0] && curr[1] === end[1]) {\r\n            curr = prev[curr[0]][curr[1]];\r\n            let st =[];\r\n            st.push(curr);\r\n            while (true) {\r\n              st.push(curr);\r\n              if (curr === start) {\r\n                for(let j = st.length-1 ; j>=0; j--){\r\n                  setTimeout(() => markPath(st[j]), time);\r\n                  time+=t;\r\n                }\r\n                return;\r\n              }\r\n              curr = prev[curr[0]][curr[1]];\r\n            }\r\n          }\r\n\r\n          for (let i = 0; i < 4; i++) {\r\n            let next = [curr[0] + dx[i], curr[1] + dy[i]];\r\n            if (\r\n              next[0] >= 0 &&\r\n              next[0] < ROW_SIZE &&\r\n              next[1] >= 0 &&\r\n              next[1] < COLUMN_SIZE &&\r\n              !board[next[0]][next[1]].isWall &&\r\n              !board[next[0]][next[1]].isVisited &&\r\n              !board[next[0]][next[1]].isExplored &&\r\n              dist[next[0]][next[1]] > 1 + dist[curr[0]][curr[1]]\r\n            ) {\r\n              queue.push(next);\r\n              prev[next[0]][next[1]] = curr;\r\n              dist[next[0]][next[1]] = 1 + dist[curr[0]][curr[1]];\r\n              setTimeout(() => markExplored(next), time);\r\n              time+=t;\r\n            }\r\n          }\r\n      }\r\n      setTimeout(() => markPath(start), time);\r\n      time+=t;\r\n    };\r\n  \r\n  export default dijk;","import React from \"react\";\r\n\r\nfunction astar(board, markVisited, markExplored, markPath,t){\r\n    const ROW_SIZE = 15;\r\n    const COLUMN_SIZE = 49;\r\n    let start=[];\r\n    let end=[];\r\n    let time=0;\r\n    for(let i=0; i<ROW_SIZE ; i++)\r\n    {\r\n        for(let j=0; j<COLUMN_SIZE; j++)\r\n        {\r\n            if(board[i][j].isStart)start=[i,j];\r\n            else if(board[i][j].isEnd)end=[i,j];\r\n            if(board[i][j].isStart || board[i][j].isEnd){\r\n                board[i][j].isVisited=false;\r\n                board[i][j].isExplored=false;\r\n                board[i][j].ispath=false;\r\n                board[i][j].isWall=false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function distance(x1,y1){\r\n        return Math.abs(x1-end[0])+Math.abs(y1-end[1]);\r\n    }\r\n\r\n    const dx = [0, 1, 0, -1],\r\n      dy = [1, 0, -1, 0];\r\n  \r\n    let dist = [], xxdist=[], prev = [];\r\n    for (let i = 0; i < ROW_SIZE; i++) {\r\n      let distRow = [],\r\n        prevRow = [],\r\n        xrow=[];\r\n      for (let j = 0; j < COLUMN_SIZE; j++) {\r\n        distRow.push(Infinity);\r\n        xrow.push(Infinity);\r\n        prevRow.push([i, j]);\r\n      }\r\n      dist.push(distRow);\r\n      xxdist.push(xrow);\r\n      prev.push(prevRow);\r\n    }\r\n    dist[start[0]][start[1]] = distance(start[0],start[1]);\r\n    xxdist[start[0]][start[1]] = 0;\r\n    let queue = [];\r\n    queue.push(start);\r\n    while (queue.length > 0) {\r\n        let sz = queue.length;\r\n        const [x1,y1]=queue[0];\r\n        let dis = dist[x1][y1];\r\n        let index=0;\r\n        for(let j=1;j<sz;j++){\r\n            let [x1,y1]= queue[j];\r\n            if(dis>dist[x1][y1])\r\n            {\r\n              dis=dist[x1][y1];\r\n              index=j;\r\n            }\r\n            else if(dis===dist[x1][y1]){\r\n              let [x,y]=queue[index];\r\n              if(distance(x,y) > distance(x1,y1)){\r\n                index=j;\r\n              }\r\n            }\r\n        }\r\n        let temp = queue[0];\r\n        queue[0]=queue[index];\r\n        queue[index]=temp;\r\n        let curr = queue.shift();\r\n        setTimeout(() => markVisited(curr),time);\r\n        time+=t;\r\n        if (curr[0] === end[0] && curr[1] === end[1]) {\r\n          curr = prev[curr[0]][curr[1]];\r\n          let st =[];\r\n          st.push(curr);\r\n          while (true) {\r\n            let temp = curr;\r\n            st.push(temp);\r\n            if (curr === start) {\r\n              for(let j=st.length-1;j>=0;j--){\r\n                setTimeout(() => markPath(st[j]),time);\r\n                time+=t;\r\n              }\r\n              return;\r\n            }\r\n            curr = prev[curr[0]][curr[1]];\r\n          }\r\n        }\r\n          for (let i = 0; i < 4; i++) {\r\n            let next = [curr[0] + dx[i], curr[1] + dy[i]];\r\n            if (\r\n              next[0] >= 0 &&\r\n              next[0] < ROW_SIZE &&\r\n              next[1] >= 0 &&\r\n              next[1] < COLUMN_SIZE &&\r\n              !board[next[0]][next[1]].isWall &&\r\n              !board[next[0]][next[1]].isVisited &&\r\n              dist[next[0]][next[1]] > 1 + dist[curr[0]][curr[1]]\r\n            ) {\r\n              queue.push(next);\r\n              prev[next[0]][next[1]] = curr;\r\n              xxdist[next[0]][next[1]] = xxdist[curr[0]][curr[1]]+1;\r\n              let c = xxdist[next[0]][next[1]];\r\n              dist[next[0]][next[1]] = distance(next[0],next[1]) + c;\r\n              setTimeout(() => markExplored(next),time);\r\n              time+=t;\r\n            }\r\n          }\r\n      }\r\n      setTimeout(() => markPath(start),time);\r\n      time+=t;\r\n    };\r\n  \r\n  export default astar;","import React, { useState, useEffect } from \"react\";\r\nimport { getSupportedCodeFixes, setSyntheticLeadingComments } from \"typescript\";\r\nimport Node from \"./node\";\r\nimport Bfs from \"./bfs\";\r\nimport Greedy from \"./Greedy\";\r\nimport Astar from \"./Astar\";\r\n\r\nconst ROWS = 15;\r\nconst COL = 49;\r\n\r\n\r\nfunction Grid(){\r\n    \r\n    const [c,setC]=useState(false);\r\n    const [d,setD]=useState(false);\r\n    const arr=[];    \r\n    const [btn, setBtn]=useState(true);\r\n    const [time,setTime]=useState(10);\r\n    for(let i=0;i<ROWS;i++){\r\n        const eachrow=[]\r\n        for(let j=0;j<COL;j++){\r\n            eachrow.push({\r\n                rowid: i,\r\n                colid: j,\r\n                isVisited: false,\r\n                isStart: false,\r\n                isEnd: false,\r\n                isWall: false,\r\n                isExplored: false,\r\n                ispath: false,\r\n                parent: [],\r\n                bool: false\r\n            });\r\n        }\r\n        arr.push(eachrow);\r\n    }\r\n    //start and end positions\r\n    arr[6][5].isStart=true;\r\n    arr[6][35].isEnd=true;\r\n    const [grid,setGrid]= useState(arr);\r\n    const [bool,setBool]= useState(false);\r\n    \r\n    const [test, setTest] = useState(0);\r\n    //for walls display\r\n    function check([i,j]){\r\n        console.log(\"checked at \"+i+\" \"+j);\r\n        if(c===1){\r\n            grid[i][j].isStart=true;\r\n            setcv(false);\r\n            setGrid(grid);\r\n            return false;\r\n        }\r\n        else if(d===1){\r\n            grid[i][j].isEnd=true;\r\n            setdv(false);\r\n            setGrid(grid);\r\n            return false;\r\n        }\r\n        if(grid[i][j].isStart || grid[i][j].isEnd){\r\n            grid[i][j].isWall=false;\r\n            grid[i][j].isExplored=false;\r\n            grid[i][j].isVisited=false;\r\n            grid[i][j].ispath=false;\r\n            setGrid(grid);\r\n            setTest(Math.random());\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function handleClick([i,j]){\r\n        // if(c || d){\r\n        //     setTest(Math.random()); return false;}\r\n        // if(grid[i][j].isStart || grid[i][j].isEnd){\r\n        //     setTest(Math.random()); return false;}\r\n            grid[i][j].isWall^=true;\r\n            setGrid(grid);\r\n        setTest(Math.random());   \r\n    }\r\n    //display walls and move center thing\r\n    function togst([i,j]){\r\n        grid[i][j].isStart^=true;\r\n        for(let x=0;x<ROWS;x++){\r\n            for(let y=0;y<COL;y++){\r\n                if(i!=x || j!=y){\r\n                    grid[x][y].isStart=false;\r\n                }\r\n            }\r\n        }\r\n        setGrid(grid);\r\n        setTest(Math.random());\r\n    }\r\n    function togen([i,j]){\r\n        grid[i][j].isEnd^=true;\r\n        for(let x=0;x<ROWS;x++){\r\n            for(let y=0;y<COL;y++){\r\n                if(i!=x || j!=y){\r\n                    grid[x][y].isEnd=false;\r\n                }\r\n            }\r\n        }\r\n        setGrid(grid);\r\n        setTest(Math.random());\r\n    }\r\n    function setcv(val){\r\n        setC(val);\r\n        setTest(Math.random());\r\n    }\r\n    function setdv(val){\r\n        setD(val);\r\n        setTest(Math.random());\r\n    }\r\n    function f(a){\r\n        setBool(a);\r\n    }\r\n    function clr(grid){\r\n        console.log(\"working\");\r\n        for(let i=0;i<ROWS;i++){\r\n            for(let j=0;j<COL;j++){\r\n                grid[i][j].isExplored=false;\r\n                grid[i][j].isVisited=false;\r\n                grid[i][j].ispath=false;\r\n            }\r\n        }\r\n        setTest(Math.random());\r\n        setGrid(grid);\r\n        setTest(Math.random());\r\n        return true;\r\n    }\r\n    //reset board\r\n    function resboard(){\r\n        const arr=[];    \r\n        for(let i=0;i<ROWS;i++){\r\n            const eachrow=[]\r\n            for(let j=0;j<COL;j++){\r\n                eachrow.push({\r\n                    rowid: i,\r\n                    colid: j,\r\n                    isVisited: false,\r\n                    isStart: false,\r\n                    isEnd: false,\r\n                    isWall: false,\r\n                    isExplored: false,\r\n                    ispath: false,\r\n                    parent: [],\r\n                    bool: false\r\n                });\r\n            }\r\n            arr.push(eachrow);\r\n        }\r\n        //start and end positions\r\n        arr[6][5].isStart=true;\r\n        arr[6][35].isEnd=true;\r\n        setGrid(arr);\r\n        setTest(Math.random());\r\n    }\r\n\r\n    function markVis([i,j]){\r\n        if(!grid[i][j].isStart && !grid[i][j].isEnd)\r\n        {\r\n            grid[i][j].isVisited=true;\r\n            grid[i][j].isExplored=false;\r\n            setGrid(grid);\r\n            setTest(Math.random());\r\n        }\r\n        setTest(Math.random());  \r\n    }\r\n    function markexplored([i,j]){\r\n        if(!grid[i][j].isStart && !grid[i][j].isEnd)\r\n        {\r\n            grid[i][j].isExplored=true;\r\n            setGrid(grid);\r\n            setTest(Math.random());\r\n        }\r\n        setTest(Math.random());\r\n    }\r\n    function markpath([i,j]){\r\n        if(!grid[i][j].isStart)\r\n        {\r\n            grid[i][j].isExplored=false;\r\n            grid[i][j].ispath=true;\r\n            setGrid(grid);\r\n            setTest(Math.random());\r\n        }\r\n        setTest(Math.random());\r\n    }\r\n    \r\n    //main return call for grid and button display\r\n    return (\r\n    <div>\r\n        {grid.map((row,rowid) => {\r\n            return (<div className=\"erow\">\r\n                {row.map((col,colid) => {\r\n                    return (\r\n                        <Node \r\n                            rowid={grid[rowid][colid].rowid}\r\n                            colid={grid[rowid][colid].colid}\r\n                            isStart={grid[rowid][colid].isStart}\r\n                            isEnd={grid[rowid][colid].isEnd}\r\n                            isVisited={grid[rowid][colid].isVisited}\r\n                            isWall={grid[rowid][colid].isWall}\r\n                            isExplored={grid[rowid][colid].isExplored}\r\n                            ispath={grid[rowid][colid].ispath}\r\n                            parent={grid[rowid][colid].parent}\r\n                            bool={bool}\r\n                            setbool={f} \r\n                            Clicks={handleClick}\r\n                            togen={togen}\r\n                            togst={togst}\r\n                            c={c}\r\n                            d={d}\r\n                            setc={setcv}\r\n                            setd={setdv}\r\n                            check={check}\r\n                        />\r\n                    );\r\n                })\r\n                }\r\n            </div>)\r\n            }\r\n        )\r\n        }\r\n        <div className=\"bot\">\r\n            <div className=\"botli\"><a  className=\"x\" onClick={() => clr(grid) && Bfs(grid,markVis,markexplored,markpath,time)}>Dijkstra Algorithm</a></div>\r\n            <div className=\"botli\"><a  className=\"x\" onClick={() => clr(grid) && Greedy(grid,markVis,markexplored,markpath,time)}>Greedy-Best First Search</a></div>\r\n            <div className=\"botli\"><a  className=\"x\" onClick={() => clr(grid) && Astar(grid,markVis,markexplored,markpath,time)}>A-star Algorithm</a> </div>\r\n            <div className=\"botli\"><a  className=\"x\" onClick={() => resboard()}>Reset Board</a></div>\r\n            <div className=\"botli\"><a className=\"x\"  onClick={() => clr(grid)}>Clear</a></div>\r\n            {/* <li className=\"left botli\"><a className=\"botlia0\" onClick={() => clr(grid) && Bfs(grid,markVis,markexplored,markpath,time)}>Dijkstra Algorithm</a></li>\r\n            <li className=\"botli\"><a className=\"botlia1\" onClick={() => clr(grid) && Greedy(grid,markVis,markexplored,markpath,time)}>Greedy-Best First Search</a></li>\r\n            <li className=\"botli\"><a className=\"botlia2\" onClick={() => resboard()}>Reset Board</a></li>\r\n            <li className=\"botli\"><a class=\"botlia3\" onClick={() => clr(grid)}>Clear</a></li>\r\n            <li className=\"botli main\">\r\n                <a className=\"visualizebtn\" onClick={() => clr(grid) && Astar(grid,markVis,markexplored,markpath,time)}>A-star Algorithm</a> \r\n            </li> */}\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\nexport default Grid;","import React from \"react\";\nimport Grid from \"./Grid\";\n\n// const grid=[];\n\nfunction App() {\n  return (\n  <div>\n    <Grid />\n  </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}