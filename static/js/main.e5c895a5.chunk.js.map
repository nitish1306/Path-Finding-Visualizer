{"version":3,"sources":["../node_modules/typescript/lib sync","components/node.jsx","components/bfs.jsx","components/Greedy.jsx","components/Astar.jsx","components/Grid.jsx","components/App.jsx","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","node","props","onMouseDown","isStart","c","isEnd","d","togst","rowid","colid","setc","togen","setd","setbool","onMouseEnter","bool","Clicks","onMouseUp","onClick","className","isWall","ispath","isVisited","isExplored","test","board","markVisited","markExplored","markPath","t","direction","start","end","time","i","j","dx","dy","dist","prev","distRow","prevRow","push","Infinity","queue","length","sz","curr","shift","setTimeout","st","next","greedy","distance","x1","y1","x2","y2","Math","abs","min","sqrt","max","dis","index","temp","console","log","astar","xxdist","xrow","Grid","useState","setC","setD","arr","setTime","speed","setSpeed","dtext","setDtext","setDirection","eachrow","parent","grid","setGrid","setBool","setTest","handleClick","random","x","y","setcv","val","setdv","f","a","clr","markVis","markexplored","markpath","map","row","col","Bfs","Greedy","Astar","resboard","App","ReactDOM","render","document","getElementById"],"mappings":"+cAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,4FCgDVC,MAtDf,SAAcC,GA8BV,OACI,qBACKC,YAAa,kBA9BA,GAAfD,EAAME,UAAmBF,EAAMG,GACd,GAAbH,EAAMI,QAAiBJ,EAAMK,IAElB,GAAfL,EAAME,SACLF,EAAMM,MAAM,CAACN,EAAMO,MAAMP,EAAMQ,QAC/BR,EAAMS,MAAK,IACJ,GAEU,GAAbT,EAAMI,QACVJ,EAAMU,MAAM,CAACV,EAAMO,MAAMP,EAAMQ,QAC/BR,EAAMW,MAAK,IACJ,MAmByBX,EAAMY,SAAQ,IAC7CC,aAAc,kBAbhBb,EAAMG,GAAEH,EAAMM,MAAM,CAACN,EAAMO,MAAMP,EAAMQ,QACvCR,EAAMK,GAAEL,EAAMU,MAAM,CAACV,EAAMO,MAAMP,EAAMQ,QAYLR,EAAMc,MAASd,EAAMe,OAAO,CAACf,EAAMO,MAAMP,EAAMQ,SAE/EQ,UAAW,kBAVbhB,EAAMG,GAAGH,EAAMS,MAAK,GACpBT,EAAMK,GAAGL,EAAMW,MAAK,GASWX,EAAMY,SAAQ,IAC3CK,QAAS,kBAAOjB,EAAMe,OAAO,CAACf,EAAMO,MAAMP,EAAMQ,SAErDU,UAAWlB,EAAMI,MAAO,SACXJ,EAAME,QAAS,SACXF,EAAMmB,OAAO,WACTnB,EAAMoB,OAAO,WACTpB,EAAMqB,UAAU,UACZrB,EAAMsB,WAAW,QAAQ,SC0C7CC,MArFjB,SAAcC,EAAOC,EAAaC,EAAcC,EAASC,EAAEC,GAMvD,IALA,IAEIC,EAAM,GACNC,EAAI,GACJC,EAAK,EACDC,EAAE,EAAGA,EALI,GAKSA,IAEtB,IAAI,IAAIC,EAAE,EAAGA,EANG,GAMYA,IAErBV,EAAMS,GAAGC,GAAGhC,QAAQ4B,EAAM,CAACG,EAAEC,GACxBV,EAAMS,GAAGC,GAAG9B,QAAM2B,EAAI,CAACE,EAAEC,KAC9BV,EAAMS,GAAGC,GAAGhC,SAAWsB,EAAMS,GAAGC,GAAG9B,SAClCoB,EAAMS,GAAGC,GAAGb,WAAU,EACtBG,EAAMS,GAAGC,GAAGZ,YAAW,EACvBE,EAAMS,GAAGC,GAAGd,QAAO,GAS/B,IALA,IAAMe,EAAK,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAClCC,EAAK,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAE5BC,EAAO,GACTC,EAAO,GACAL,EAAI,EAAGA,EAvBC,GAuBaA,IAAK,CAGjC,IAFA,IAAIM,EAAU,GACZC,EAAU,GACHN,EAAI,EAAGA,EAzBE,GAyBeA,IAC/BK,EAAQE,KAAKC,KACbF,EAAQC,KAAK,CAACR,EAAGC,IAEnBG,EAAKI,KAAKF,GACVD,EAAKG,KAAKD,GAGZH,EAAKP,EAAM,IAAIA,EAAM,IAAM,EAE3B,IAAIa,EAAQ,GAEZ,IADAA,EAAMF,KAAKX,GACJa,EAAMC,OAAS,GAEpB,IADA,IAAIC,EAAKF,EAAMC,OADQ,WAEdX,GACP,IAAIa,EAAOH,EAAMI,QAGjB,GAFAC,YAAW,kBAAMvB,EAAYqB,KAAOd,GACpCA,GAAMJ,EACFkB,EAAK,KAAOf,EAAI,IAAMe,EAAK,KAAOf,EAAI,GAAI,CAAC,IAAD,aAC5Ce,EAAOR,EAAKQ,EAAK,IAAIA,EAAK,IAC1B,IAAIG,EAAI,GAER,IADAA,EAAGR,KAAKK,KACK,CAEX,GADAG,EAAGR,KAAKK,GACJA,IAAShB,EAAO,CAClB,IADmB,IAAD,WACVI,GACNc,YAAW,kBAAMrB,EAASsB,EAAGf,MAAKF,GAClCA,GAAMJ,GAFAM,EAAIe,EAAGL,OAAO,EAAIV,GAAG,EAAGA,IAAK,EAA7BA,GAIR,MAAM,CAAN,cAEFY,EAAOR,EAAKQ,EAAK,IAAIA,EAAK,KAbgB,qCAgB9C,IAtBqB,eAsBZb,GACP,IAAIiB,EAAO,CAACJ,EAAK,GAAKX,EAAGF,GAAIa,EAAK,GAAKV,EAAGH,IAExCiB,EAAK,IAAM,GACXA,EAAK,GAhEI,IAiETA,EAAK,IAAM,GACXA,EAAK,GAjEO,KAkEX1B,EAAM0B,EAAK,IAAIA,EAAK,IAAI/B,SACxBK,EAAM0B,EAAK,IAAIA,EAAK,IAAI7B,WACzBgB,EAAKa,EAAK,IAAIA,EAAK,IAAM,EAAIb,EAAKS,EAAK,IAAIA,EAAK,MAEhDH,EAAMF,KAAKS,GACXZ,EAAKY,EAAK,IAAIA,EAAK,IAAMJ,EACzBT,EAAKa,EAAK,IAAIA,EAAK,IAAM,EAAIb,EAAKS,EAAK,IAAIA,EAAK,IAChDE,YAAW,kBAAMtB,EAAawB,KAAOlB,GACrCA,GAAMJ,IAfDK,EAAI,EAAGA,EAAIJ,EAAWI,IAAM,EAA5BA,IApBFA,EAAI,EAAGA,EAAIY,EAAIZ,IAAK,CAAC,IAAD,wCAwC/Be,YAAW,kBAAMrB,EAASG,KAAQE,GAClCA,GAAMJ,GC4BOuB,MA9GjB,SAAgB3B,EAAOC,EAAaC,EAAcC,EAASC,EAAEC,GAMzD,IALA,IAEIC,EAAM,GACNC,EAAI,GACJC,EAAK,EACDC,EAAE,EAAGA,EALI,GAKSA,IAEtB,IAAI,IAAIC,EAAE,EAAGA,EANG,GAMYA,IAErBV,EAAMS,GAAGC,GAAGhC,QAAQ4B,EAAM,CAACG,EAAEC,GACxBV,EAAMS,GAAGC,GAAG9B,QAAM2B,EAAI,CAACE,EAAEC,KAC9BV,EAAMS,GAAGC,GAAGhC,SAAWsB,EAAMS,GAAGC,GAAG9B,SAClCoB,EAAMS,GAAGC,GAAGb,WAAU,EACtBG,EAAMS,GAAGC,GAAGZ,YAAW,EACvBE,EAAMS,GAAGC,GAAGd,QAAO,EACnBI,EAAMS,GAAGC,GAAGf,QAAO,GAI/B,SAASiC,EAASC,EAAGC,EAAGC,EAAGC,GACvB,OAAe,IAAZ3B,EAAsB4B,KAAKC,IAAIL,EAAGE,GAAIE,KAAKC,IAAIJ,EAAGE,GACxCC,KAAKE,IAAIF,KAAKC,IAAIL,EAAGE,GAAIE,KAAKC,IAAIJ,EAAGE,IAAKC,KAAKG,KAAK,GAAGH,KAAKI,IAAIJ,KAAKC,IAAIL,EAAGE,GAAIE,KAAKC,IAAIJ,EAAGE,IAQ7G,IALA,IAAMrB,EAAK,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAClCC,EAAK,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAE5BC,EAAO,GACTC,EAAO,GACAL,EAAI,EAAGA,EA7BC,GA6BaA,IAAK,CAGjC,IAFA,IAAIM,EAAU,GACZC,EAAU,GACHN,EAAI,EAAGA,EA/BE,GA+BeA,IAC/BK,EAAQE,KAAKC,KACbF,EAAQC,KAAK,CAACR,EAAGC,IAEnBG,EAAKI,KAAKF,GACVD,EAAKG,KAAKD,GAGZH,EAAKP,EAAM,IAAIA,EAAM,IAAM,EAE3B,IAAIa,EAAQ,GACZA,EAAMF,KAAKX,GACX,IA7CmE,iBAmD/D,IALA,IAAIe,EAAKF,EAAMC,OACf,cAAcD,EAAM,GAApB,GAEImB,EAAMV,EAFV,UAEyBrB,EAAI,GAAGA,EAAI,IAChCG,EAAE,EAAE6B,EAAM,EACT7B,EAAEW,EAAGX,IAAI,CACV,kBAAaS,EAAMT,GAAnB,GAAKmB,EAAL,KAAQC,EAAR,KACGQ,EAAIV,EAASC,EAAGC,EAAGvB,EAAI,GAAGA,EAAI,MAE7B+B,EAAIV,EAASC,EAAGC,EAAGvB,EAAI,GAAGA,EAAI,IAE9BgC,EAAM7B,GAGd,IAAI8B,EAAOrB,EAAM,GACjBA,EAAM,GAAGA,EAAMoB,GACfpB,EAAMoB,GAAOC,EACb,IAAIlB,EAAOH,EAAMI,QAMf,GALFkB,QAAQC,IAAIpB,GAEVE,YAAW,kBAAMvB,EAAYqB,KAAOd,GACpCA,GAAMJ,EAEFkB,EAAK,KAAOf,EAAI,IAAMe,EAAK,KAAOf,EAAI,GAAI,CAAC,IAAD,aAC5Ce,EAAOR,EAAKQ,EAAK,IAAIA,EAAK,IAC1B,IAAIG,EAAI,GAER,IADAA,EAAGR,KAAKK,KACK,CAEX,GADAG,EAAGR,KAAKK,GACJA,IAAShB,EAAO,CAClB,IADmB,IAAD,WACVI,GACNc,YAAW,kBAAMrB,EAASsB,EAAGf,MAAKF,GAClCA,GAAMJ,GAFAM,EAAIe,EAAGL,OAAO,EAAIV,GAAG,EAAGA,IAAK,EAA7BA,GAIR,MAAM,CAAN,cAEFY,EAAOR,EAAKQ,EAAK,IAAIA,EAAK,KAbgB,qCAiB9C,IAtF6D,eAsFpDb,GACP,IAAIiB,EAAO,CAACJ,EAAK,GAAKX,EAAGF,GAAIa,EAAK,GAAKV,EAAGH,IAExCiB,EAAK,IAAM,GACXA,EAAK,GAzFE,IA0FPA,EAAK,IAAM,GACXA,EAAK,GA1FK,KA2FT1B,EAAM0B,EAAK,IAAIA,EAAK,IAAI/B,SACxBK,EAAM0B,EAAK,IAAIA,EAAK,IAAI7B,YACxBG,EAAM0B,EAAK,IAAIA,EAAK,IAAI5B,YACzBe,EAAKa,EAAK,IAAIA,EAAK,IAAM,EAAIb,EAAKS,EAAK,IAAIA,EAAK,MAEhDH,EAAMF,KAAKS,GACXZ,EAAKY,EAAK,IAAIA,EAAK,IAAMJ,EACzBT,EAAKa,EAAK,IAAIA,EAAK,IAAM,EAAIb,EAAKS,EAAK,IAAIA,EAAK,IAChDE,YAAW,kBAAMtB,EAAawB,KAAOlB,GACrCA,GAAMJ,IAhBDK,EAAI,EAAGA,EAAIJ,EAAWI,IAAM,EAA5BA,IAzCRU,EAAMC,OAAS,GAAG,CAAC,IAAD,wCA6DvBI,YAAW,kBAAMrB,EAASG,KAAQE,GAClCA,GAAMJ,GCQKuC,MAnHjB,SAAe3C,EAAOC,EAAaC,EAAcC,EAAUC,EAAGC,GAM1D,IALA,IAEIC,EAAM,GACNC,EAAI,GACJC,EAAK,EACDC,EAAE,EAAGA,EALI,GAKSA,IAEtB,IAAI,IAAIC,EAAE,EAAGA,EANG,GAMYA,IAErBV,EAAMS,GAAGC,GAAGhC,QAAQ4B,EAAM,CAACG,EAAEC,GACxBV,EAAMS,GAAGC,GAAG9B,QAAM2B,EAAI,CAACE,EAAEC,KAC9BV,EAAMS,GAAGC,GAAGhC,SAAWsB,EAAMS,GAAGC,GAAG9B,SAClCoB,EAAMS,GAAGC,GAAGb,WAAU,EACtBG,EAAMS,GAAGC,GAAGZ,YAAW,EACvBE,EAAMS,GAAGC,GAAGd,QAAO,EACnBI,EAAMS,GAAGC,GAAGf,QAAO,GAK/B,SAASiC,EAASC,EAAGC,GACnB,OAAc,GAAXzB,EAAsB4B,KAAKC,IAAIL,EAAGtB,EAAI,IAAI0B,KAAKC,IAAIJ,EAAGvB,EAAI,IAChD0B,KAAKE,IAAIF,KAAKC,IAAIL,EAAGtB,EAAI,IAAI0B,KAAKC,IAAIJ,EAAGvB,EAAI,KAAK0B,KAAKG,KAAK,GAAGH,KAAKI,IAAIJ,KAAKC,IAAIL,EAAGtB,EAAI,IAAI0B,KAAKC,IAAIJ,EAAGvB,EAAI,KAM3H,IAJA,IAAMI,EAAK,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAC9BC,EAAK,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAEhCC,EAAO,GAAI+B,EAAO,GAAI9B,EAAO,GACxBL,EAAI,EAAGA,EA5BC,GA4BaA,IAAK,CAIjC,IAHA,IAAIM,EAAU,GACZC,EAAU,GACV6B,EAAK,GACEnC,EAAI,EAAGA,EA/BE,GA+BeA,IAC/BK,EAAQE,KAAKC,KACb2B,EAAK5B,KAAKC,KACVF,EAAQC,KAAK,CAACR,EAAGC,IAEnBG,EAAKI,KAAKF,GACV6B,EAAO3B,KAAK4B,GACZ/B,EAAKG,KAAKD,GAEZH,EAAKP,EAAM,IAAIA,EAAM,IAAMsB,EAAStB,EAAM,GAAGA,EAAM,IACnDsC,EAAOtC,EAAM,IAAIA,EAAM,IAAM,EAC7B,IAAIa,EAAQ,GACZA,EAAMF,KAAKX,GACX,IA9CoE,iBAmDhE,IAJA,IAAIe,EAAKF,EAAMC,OACf,cAAcD,EAAM,GAApB,GAAOU,EAAP,KAAUC,EAAV,KACIQ,EAAMzB,EAAKgB,GAAIC,GACfS,EAAM,EACF7B,EAAE,EAAEA,EAAEW,EAAGX,IAAI,CACjB,kBAAaS,EAAMT,GAAnB,GAAKmB,EAAL,KAAQC,EAAR,KACIjD,EAAIgC,EAAKgB,GAAIC,GACjB,GAAGQ,EAAIzD,EAELyD,EAAIzD,EACJ0D,EAAM7B,OAEH,GAAG4B,IAAMzD,EAAE,CACd,kBAAUsC,EAAMoB,GAAhB,GACGX,EADH,WACmBA,EAASC,EAAGC,KAC7BS,EAAM7B,IAId,IAAI8B,EAAOrB,EAAM,GACjBA,EAAM,GAAGA,EAAMoB,GACfpB,EAAMoB,GAAOC,EACb,IAAIlB,EAAOH,EAAMI,QAGjB,GAFAC,YAAW,kBAAMvB,EAAYqB,KAAMd,GACnCA,GAAMJ,EACFkB,EAAK,KAAOf,EAAI,IAAMe,EAAK,KAAOf,EAAI,GAAI,CAAC,IAAD,aAC5Ce,EAAOR,EAAKQ,EAAK,IAAIA,EAAK,IAC1B,IAAIG,EAAI,GAER,IADAA,EAAGR,KAAKK,KACK,CACX,IAAIkB,EAAOlB,EAEX,GADAG,EAAGR,KAAKuB,GACJlB,IAAShB,EAAO,CAClB,IADmB,IAAD,WACVI,GACNc,YAAW,kBAAMrB,EAASsB,EAAGf,MAAIF,GACjCA,GAAMJ,GAFAM,EAAEe,EAAGL,OAAO,EAAEV,GAAG,EAAEA,IAAK,EAAxBA,GAIR,MAAM,CAAN,cAEFY,EAAOR,EAAKQ,EAAK,IAAIA,EAAK,KAdgB,qCAiB5C,IAzF8D,eAyFrDb,GACP,IAAIiB,EAAO,CAACJ,EAAK,GAAKX,EAAGF,GAAIa,EAAK,GAAKV,EAAGH,IAC1C,GACEiB,EAAK,IAAM,GACXA,EAAK,GA5FE,IA6FPA,EAAK,IAAM,GACXA,EAAK,GA7FK,KA8FT1B,EAAM0B,EAAK,IAAIA,EAAK,IAAI/B,SACxBK,EAAM0B,EAAK,IAAIA,EAAK,IAAI7B,WACzBgB,EAAKa,EAAK,IAAIA,EAAK,IAAM,EAAGb,EAAKS,EAAK,IAAIA,EAAK,IAC/C,CACAmB,QAAQC,IAAIhB,EAAK,GAAG,IAAIA,EAAK,IAC7BP,EAAMF,KAAKS,GACXZ,EAAKY,EAAK,IAAIA,EAAK,IAAMJ,EACzBsB,EAAOlB,EAAK,IAAIA,EAAK,IAAMkB,EAAOtB,EAAK,IAAIA,EAAK,IAAK,EACrD,IAAI3C,EAAIiE,EAAOlB,EAAK,IAAIA,EAAK,IAC7Bb,EAAKa,EAAK,IAAIA,EAAK,IAAME,EAASF,EAAK,GAAGA,EAAK,IAAM/C,EACrD6C,YAAW,kBAAMtB,EAAawB,KAAMlB,GACpCA,GAAMJ,IAlBDK,EAAI,EAAGA,EAAIJ,EAAWI,IAAM,EAA5BA,IA3CRU,EAAMC,OAAS,GAAG,CAAC,IAAD,wCAiEvBI,YAAW,kBAAMrB,EAASG,KAAOE,GACjCA,GAAMJ,GC4HG0C,MAnOf,WASI,IAPA,MAAeC,oBAAS,GAAxB,mBAAOpE,EAAP,KAASqE,EAAT,KACA,EAAeD,oBAAS,GAAxB,mBAAOlE,EAAP,KAASoE,EAAT,KACMC,EAAI,GACV,EAAqBH,mBAAS,IAA9B,mBAAOvC,EAAP,KAAY2C,EAAZ,KACA,EAAuBJ,mBAAS,UAAhC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAwBN,mBAAS,qBAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAAiCR,mBAAS,GAA1C,mBAAO1C,EAAP,KAAiBmD,EAAjB,KACQ/C,EAAE,EAAEA,EAbH,GAaUA,IAAI,CAEnB,IADA,IAAMgD,EAAQ,GACN/C,EAAE,EAAEA,EAdR,GAccA,IACd+C,EAAQxC,KAAK,CACTlC,MAAO0B,EACPzB,MAAO0B,EACPb,WAAW,EACXnB,SAAS,EACTE,OAAO,EACPe,QAAQ,EACRG,YAAY,EACZF,QAAQ,EACR8D,OAAQ,GACRpE,MAAM,IAGd4D,EAAIjC,KAAKwC,GAGbP,EAAI,GAAG,GAAGxE,SAAQ,EAClBwE,EAAI,GAAG,IAAItE,OAAM,EACjB,MAAsBmE,mBAASG,GAA/B,mBAAOS,EAAP,KAAYC,EAAZ,KACA,EAAsBb,oBAAS,GAA/B,mBAAOzD,EAAP,KAAYuE,EAAZ,KAEA,EAAwBd,mBAAS,GAAjC,mBAAae,GAAb,WAEA,SAASC,EAAT,GAA4B,IAAD,mBAALtD,EAAK,KAAHC,EAAG,KACvBiD,EAAKlD,GAAGC,GAAGf,SAAQ,EACnBiE,EAAQD,GACRG,EAAQ7B,KAAK+B,UA6BjB,SAASlF,EAAT,GAAsB,IAAD,mBAAL2B,EAAK,KAAHC,EAAG,KACjBiD,EAAKlD,GAAGC,GAAGhC,UAAS,EACpB,IAAI,IAAIuF,EAAE,EAAEA,EAzEP,GAyEcA,IACf,IAAI,IAAIC,EAAE,EAAEA,EAzEZ,GAyEkBA,IACXzD,GAAGwD,GAAKvD,GAAGwD,IACVP,EAAKM,GAAGC,GAAGxF,SAAQ,GAI/BkF,EAAQD,GACRG,EAAQ7B,KAAK+B,UAEjB,SAAS9E,EAAT,GAAsB,IAAD,mBAALuB,EAAK,KAAHC,EAAG,KACjBiD,EAAKlD,GAAGC,GAAG9B,QAAO,EAClB,IAAI,IAAIqF,EAAE,EAAEA,EArFP,GAqFcA,IACf,IAAI,IAAIC,EAAE,EAAEA,EArFZ,GAqFkBA,IACXzD,GAAGwD,GAAKvD,GAAGwD,IACVP,EAAKM,GAAGC,GAAGtF,OAAM,GAI7BgF,EAAQD,GACRG,EAAQ7B,KAAK+B,UAEjB,SAASG,EAAMC,GACXpB,EAAKoB,GACLN,EAAQ7B,KAAK+B,UAEjB,SAASK,EAAMD,GACXnB,EAAKmB,GACLN,EAAQ7B,KAAK+B,UAEjB,SAASM,EAAEC,GACPV,EAAQU,GAEZ,SAASC,EAAIb,GACTlB,QAAQC,IAAI,WACZ,IAAI,IAAIjC,EAAE,EAAEA,EA5GP,GA4GcA,IACf,IAAI,IAAIC,EAAE,EAAEA,EA5GZ,GA4GkBA,IACdiD,EAAKlD,GAAGC,GAAGZ,YAAW,EACtB6D,EAAKlD,GAAGC,GAAGb,WAAU,EACrB8D,EAAKlD,GAAGC,GAAGd,QAAO,EAM1B,OAHAkE,EAAQ7B,KAAK+B,UACbJ,EAAQD,GACRG,EAAQ7B,KAAK+B,WACN,EA8BX,SAASS,EAAT,GAAwB,IAAD,mBAALhE,EAAK,KAAHC,EAAG,KACfiD,EAAKlD,GAAGC,GAAGhC,SAAYiF,EAAKlD,GAAGC,GAAG9B,QAElC+E,EAAKlD,GAAGC,GAAGb,WAAU,EACrB8D,EAAKlD,GAAGC,GAAGZ,YAAW,EACtB8D,EAAQD,GACRG,EAAQ7B,KAAK+B,WAEjBF,EAAQ7B,KAAK+B,UAEjB,SAASU,GAAT,GAA6B,IAAD,mBAALjE,EAAK,KAAHC,EAAG,KACpBiD,EAAKlD,GAAGC,GAAGhC,SAAYiF,EAAKlD,GAAGC,GAAG9B,QAElC+E,EAAKlD,GAAGC,GAAGZ,YAAW,EACtB8D,EAAQD,GACRG,EAAQ7B,KAAK+B,WAEjBF,EAAQ7B,KAAK+B,UAEjB,SAASW,GAAT,GAAyB,IAAD,mBAALlE,EAAK,KAAHC,EAAG,KAChBiD,EAAKlD,GAAGC,GAAGhC,UAEXiF,EAAKlD,GAAGC,GAAGZ,YAAW,EACtB6D,EAAKlD,GAAGC,GAAGd,QAAO,EAClBgE,EAAQD,GACRG,EAAQ7B,KAAK+B,WAEjBF,EAAQ7B,KAAK+B,UAIjB,OACA,gCACKL,EAAKiB,KAAI,SAACC,EAAI9F,GACX,OAAQ,qBAAKW,UAAU,OAAf,SACHmF,EAAID,KAAI,SAACE,EAAI9F,GACV,OACI,cAAC,EAAD,CACID,MAAO4E,EAAK5E,GAAOC,GAAOD,MAC1BC,MAAO2E,EAAK5E,GAAOC,GAAOA,MAC1BN,QAASiF,EAAK5E,GAAOC,GAAON,QAC5BE,MAAO+E,EAAK5E,GAAOC,GAAOJ,MAC1BiB,UAAW8D,EAAK5E,GAAOC,GAAOa,UAC9BF,OAAQgE,EAAK5E,GAAOC,GAAOW,OAC3BG,WAAY6D,EAAK5E,GAAOC,GAAOc,WAC/BF,OAAQ+D,EAAK5E,GAAOC,GAAOY,OAC3B8D,OAAQC,EAAK5E,GAAOC,GAAO0E,OAC3BpE,KAAMA,EACNF,QAASkF,EACT/E,OAAQwE,EACR7E,MAAOA,EACPJ,MAAOA,EACPH,EAAGA,EACHE,EAAGA,EACHI,KAAMkF,EACNhF,KAAMkF,YAS1B,sBAAK3E,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAQD,QAAS,WAxJzB,sBAAR6D,GACCC,EAAS,0BACTC,EAAa,KAGbD,EAAS,qBACTC,EAAa,KAkJb,SAAiD,mBAAG9D,UAAU,IAAb,SAAkB4D,MACnE,qBAAK5D,UAAU,QAAQD,QAAS,WAxKzB,WAAR2D,GACCC,EAAS,QACTF,EAAQ,KAEI,SAARC,GACJC,EAAS,QACTF,EAAQ,OAGRE,EAAS,UACTF,EAAQ,MA8JR,SAAoD,mBAAGzD,UAAU,IAAb,SAAkB0D,MACtE,qBAAK1D,UAAU,aAAaD,QAAS,kBAAM+E,EAAIb,IAASoB,EAAIpB,EAAKc,EAAQC,GAAaC,GAASnE,EAAMH,IAArG,SAAiH,mBAAIX,UAAU,IAAd,kCACjH,qBAAKA,UAAU,aAAaD,QAAS,kBAAM+E,EAAIb,IAASqB,EAAOrB,EAAKc,EAAQC,GAAaC,GAASnE,EAAMH,IAAxG,SAAoH,mBAAIX,UAAU,IAAd,wCACpH,sBAAKA,UAAU,aAAaD,QAAS,kBAAM+E,EAAIb,IAASsB,EAAMtB,EAAKc,EAAQC,GAAaC,GAASnE,EAAMH,IAAvG,UAAmH,mBAAIX,UAAU,IAAd,8BAAnH,OACA,qBAAKA,UAAU,QAAQD,QAAS,kBAjGxC,WAEI,IADA,IAAMyD,EAAI,GACFzC,EAAE,EAAEA,EA3HP,GA2HcA,IAAI,CAEnB,IADA,IAAMgD,EAAQ,GACN/C,EAAE,EAAEA,EA5HZ,GA4HkBA,IACd+C,EAAQxC,KAAK,CACTlC,MAAO0B,EACPzB,MAAO0B,EACPb,WAAW,EACXnB,SAAS,EACTE,OAAO,EACPe,QAAQ,EACRG,YAAY,EACZF,QAAQ,EACR8D,OAAQ,GACRpE,MAAM,IAGd4D,EAAIjC,KAAKwC,GAGbP,EAAI,GAAG,GAAGxE,SAAQ,EAClBwE,EAAI,GAAG,IAAItE,OAAM,EACjBgF,EAAQV,GACRY,EAAQ7B,KAAK+B,UAyE6BkB,IAAtC,SAAkD,mBAAIxF,UAAU,IAAd,2BAClD,qBAAKA,UAAU,QAAQD,QAAS,kBAAM+E,EAAIb,IAA1C,SAAiD,mBAAGjE,UAAU,IAAb,4BCrN9CyF,MARf,WACE,OACA,8BACE,cAAC,EAAD,OCJJC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e5c895a5.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 235;","import React, {useState} from \"react\";\r\n\r\nfunction node(props){\r\n    function local1(){\r\n        if(props.isStart==false && !props.c){\r\n            if(props.isEnd==false && !props.d)return true;\r\n        }\r\n        if(props.isStart==true){\r\n            props.togst([props.rowid,props.colid]);\r\n            props.setc(true);\r\n            return false;\r\n        }\r\n        else if(props.isEnd==true){\r\n            props.togen([props.rowid,props.colid]);\r\n            props.setd(true);\r\n            return false;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    }\r\n    function local2(){\r\n        if(props.c)props.togst([props.rowid,props.colid]);\r\n        if(props.d)props.togen([props.rowid,props.colid]);\r\n        return true;\r\n    }\r\n    function local3(){\r\n        if(props.c){props.setc(false);}\r\n        if(props.d){props.setd(false);}\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div  \r\n             onMouseDown={() => local1() && props.setbool(true)} \r\n             onMouseEnter={() => local2() && props.bool &&  props.Clicks([props.rowid,props.colid])}\r\n            //  onMouseDrop={()=> local2()}\r\n             onMouseUp={() => local3() && props.setbool(false)} \r\n             onClick={() =>  props.Clicks([props.rowid,props.colid])}\r\n\r\n        className={props.isEnd? \"box en\": \r\n                    (props.isStart? \"box st\":\r\n                        (props.isWall?\"box wall\":\r\n                            (props.ispath?\"box path\":\r\n                                (props.isVisited?\"box vis\":\r\n                                    (props.isExplored?\"box q\":\"box\"\r\n                                    )\r\n                                )\r\n                            )\r\n                        )\r\n                    )\r\n                    }> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default node;","import React from \"react\";\r\n\r\nfunction test(board, markVisited, markExplored, markPath,t,direction){\r\n    const ROW_SIZE = 15;\r\n    const COLUMN_SIZE = 49;\r\n    let start=[];\r\n    let end=[];\r\n    let time=0;\r\n    for(let i=0; i<ROW_SIZE ; i++)\r\n    {\r\n        for(let j=0; j<COLUMN_SIZE; j++)\r\n        {\r\n            if(board[i][j].isStart)start=[i,j];\r\n            else if(board[i][j].isEnd)end=[i,j];\r\n            if(board[i][j].isStart || board[i][j].isEnd){\r\n                board[i][j].isVisited=false;\r\n                board[i][j].isExplored=false;\r\n                board[i][j].ispath=false;\r\n            }\r\n        }\r\n    }\r\n    const dx = [0, 1, 0, -1, 1, 1, -1 ,-1],\r\n      dy = [1, 0, -1, 0, 1, -1, 1, -1];\r\n  \r\n    let dist = [],\r\n      prev = [];\r\n    for (let i = 0; i < ROW_SIZE; i++) {\r\n      let distRow = [],\r\n        prevRow = [];\r\n      for (let j = 0; j < COLUMN_SIZE; j++) {\r\n        distRow.push(Infinity);\r\n        prevRow.push([i, j]);\r\n      }\r\n      dist.push(distRow);\r\n      prev.push(prevRow);\r\n    }\r\n  \r\n    dist[start[0]][start[1]] = 0;\r\n  \r\n    let queue = [];\r\n    queue.push(start);\r\n    while (queue.length > 0) {\r\n      let sz = queue.length;\r\n      for (let i = 0; i < sz; i++) {\r\n        let curr = queue.shift();\r\n        setTimeout(() => markVisited(curr), time);\r\n        time+=t;\r\n        if (curr[0] === end[0] && curr[1] === end[1]) {\r\n          curr = prev[curr[0]][curr[1]];\r\n          let st =[];\r\n          st.push(curr);\r\n          while (true) {\r\n            st.push(curr);\r\n            if (curr === start) {\r\n              for(let j = st.length-1 ; j>=0; j--){\r\n                setTimeout(() => markPath(st[j]), time);\r\n                time+=t;\r\n              }\r\n              return;\r\n            }\r\n            curr = prev[curr[0]][curr[1]];\r\n          }\r\n        }\r\n        for (let i = 0; i < direction; i++) {\r\n          let next = [curr[0] + dx[i], curr[1] + dy[i]];\r\n          if (\r\n            next[0] >= 0 &&\r\n            next[0] < ROW_SIZE &&\r\n            next[1] >= 0 &&\r\n            next[1] < COLUMN_SIZE &&\r\n            !board[next[0]][next[1]].isWall &&\r\n            !board[next[0]][next[1]].isVisited &&\r\n            dist[next[0]][next[1]] > 1 + dist[curr[0]][curr[1]]\r\n          ) {\r\n            queue.push(next);\r\n            prev[next[0]][next[1]] = curr;\r\n            dist[next[0]][next[1]] = 1 + dist[curr[0]][curr[1]];\r\n            setTimeout(() => markExplored(next), time);\r\n            time+=t;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setTimeout(() => markPath(start), time);\r\n    time+=t;\r\n  };\r\n  \r\n  export default test;","import React from \"react\";\r\n\r\nfunction greedy(board, markVisited, markExplored, markPath,t,direction){\r\n    const ROW_SIZE = 15;\r\n    const COLUMN_SIZE = 49;\r\n    let start=[];\r\n    let end=[];\r\n    let time=0;\r\n    for(let i=0; i<ROW_SIZE ; i++)\r\n    {\r\n        for(let j=0; j<COLUMN_SIZE; j++)\r\n        {\r\n            if(board[i][j].isStart)start=[i,j];\r\n            else if(board[i][j].isEnd)end=[i,j];\r\n            if(board[i][j].isStart || board[i][j].isEnd){\r\n                board[i][j].isVisited=false;\r\n                board[i][j].isExplored=false;\r\n                board[i][j].ispath=false;\r\n                board[i][j].isWall=false;\r\n            }\r\n        }\r\n    }\r\n    function distance(x1,y1,x2,y2){\r\n        if(direction===4)return (Math.abs(x1-x2)+Math.abs(y1-y2));\r\n        else return (Math.min(Math.abs(x1-x2),Math.abs(y1-y2))*Math.sqrt(2)+Math.max(Math.abs(x1-x2),Math.abs(y1-y2)));\r\n    }\r\n\r\n    const dx = [0, 1, 0, -1, 1, 1, -1 ,-1],\r\n      dy = [1, 0, -1, 0, 1, -1, 1, -1];\r\n  \r\n    let dist = [],\r\n      prev = [];\r\n    for (let i = 0; i < ROW_SIZE; i++) {\r\n      let distRow = [],\r\n        prevRow = [];\r\n      for (let j = 0; j < COLUMN_SIZE; j++) {\r\n        distRow.push(Infinity);\r\n        prevRow.push([i, j]);\r\n      }\r\n      dist.push(distRow);\r\n      prev.push(prevRow);\r\n    }\r\n  \r\n    dist[start[0]][start[1]] = 0;\r\n  \r\n    let queue = [];\r\n    queue.push(start);\r\n    while (queue.length > 0) {\r\n        let sz = queue.length;\r\n        const [x1,y1]=queue[0];\r\n        // let c= queue[0];\r\n        let dis = distance(x1,y1,end[0],end[1]);\r\n        let j=1,index=0;\r\n        for(;j<sz;j++){\r\n            let [x1,y1]= queue[j];\r\n            if(dis>distance(x1,y1,end[0],end[1]))\r\n            {\r\n                dis=distance(x1,y1,end[0],end[1]);\r\n                // c=queue[j];\r\n                index=j;\r\n            }\r\n        }\r\n        let temp = queue[0];\r\n        queue[0]=queue[index];\r\n        queue[index]=temp;\r\n        let curr = queue.shift();\r\n        console.log(curr);\r\n        //   console.log(curr[0]);\r\n          setTimeout(() => markVisited(curr), time);\r\n          time+=t;\r\n          //path found \r\n          if (curr[0] === end[0] && curr[1] === end[1]) {\r\n            curr = prev[curr[0]][curr[1]];\r\n            let st =[];\r\n            st.push(curr);\r\n            while (true) {\r\n              st.push(curr);\r\n              if (curr === start) {\r\n                for(let j = st.length-1 ; j>=0; j--){\r\n                  setTimeout(() => markPath(st[j]), time);\r\n                  time+=t;\r\n                }\r\n                return;\r\n              }\r\n              curr = prev[curr[0]][curr[1]];\r\n            }\r\n          }\r\n\r\n          for (let i = 0; i < direction; i++) {\r\n            let next = [curr[0] + dx[i], curr[1] + dy[i]];\r\n            if (\r\n              next[0] >= 0 &&\r\n              next[0] < ROW_SIZE &&\r\n              next[1] >= 0 &&\r\n              next[1] < COLUMN_SIZE &&\r\n              !board[next[0]][next[1]].isWall &&\r\n              !board[next[0]][next[1]].isVisited &&\r\n              !board[next[0]][next[1]].isExplored &&\r\n              dist[next[0]][next[1]] > 1 + dist[curr[0]][curr[1]]\r\n            ) {\r\n              queue.push(next);\r\n              prev[next[0]][next[1]] = curr;\r\n              dist[next[0]][next[1]] = 1 + dist[curr[0]][curr[1]];\r\n              setTimeout(() => markExplored(next), time);\r\n              time+=t;\r\n            }\r\n          }\r\n      }\r\n      setTimeout(() => markPath(start), time);\r\n      time+=t;\r\n    };\r\n  \r\n  export default greedy;","import React from \"react\";\r\n\r\nfunction astar(board, markVisited, markExplored, markPath, t, direction){\r\n    const ROW_SIZE = 15;\r\n    const COLUMN_SIZE = 49;\r\n    let start=[];\r\n    let end=[];\r\n    let time=0;\r\n    for(let i=0; i<ROW_SIZE ; i++)\r\n    {\r\n        for(let j=0; j<COLUMN_SIZE; j++)\r\n        {\r\n            if(board[i][j].isStart)start=[i,j];\r\n            else if(board[i][j].isEnd)end=[i,j];\r\n            if(board[i][j].isStart || board[i][j].isEnd){\r\n                board[i][j].isVisited=false;\r\n                board[i][j].isExplored=false;\r\n                board[i][j].ispath=false;\r\n                board[i][j].isWall=false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function distance(x1,y1){\r\n      if(direction==4) return (Math.abs(x1-end[0])+Math.abs(y1-end[1]));\r\n      else return (Math.min(Math.abs(x1-end[0]),Math.abs(y1-end[1]))*Math.sqrt(2)+Math.max(Math.abs(x1-end[0]),Math.abs(y1-end[1])));\r\n    }\r\n    const dx = [0, 1, 0, -1, 1, 1, -1 ,-1],\r\n          dy = [1, 0, -1, 0, 1, -1, 1, -1];\r\n  \r\n    let dist = [], xxdist=[], prev = [];\r\n    for (let i = 0; i < ROW_SIZE; i++) {\r\n      let distRow = [],\r\n        prevRow = [],\r\n        xrow=[];\r\n      for (let j = 0; j < COLUMN_SIZE; j++) {\r\n        distRow.push(Infinity);\r\n        xrow.push(Infinity);\r\n        prevRow.push([i, j]);\r\n      }\r\n      dist.push(distRow);\r\n      xxdist.push(xrow);\r\n      prev.push(prevRow);\r\n    }\r\n    dist[start[0]][start[1]] = distance(start[0],start[1]);\r\n    xxdist[start[0]][start[1]] = 0;\r\n    let queue = [];\r\n    queue.push(start);\r\n    while (queue.length > 0) {\r\n        let sz = queue.length;\r\n        const [x1,y1]=queue[0];\r\n        let dis = dist[x1][y1];\r\n        let index=0;\r\n        for(let j=1;j<sz;j++){\r\n            let [x1,y1]= queue[j];\r\n            let d = dist[x1][y1];\r\n            if(dis>d)\r\n            {\r\n              dis=d;\r\n              index=j;\r\n            }\r\n            else if(dis===d){\r\n              let [x,y]=queue[index];\r\n              if(distance(x,y) > distance(x1,y1)){\r\n                index=j;\r\n              }\r\n            }\r\n        }\r\n        let temp = queue[0];\r\n        queue[0]=queue[index];\r\n        queue[index]=temp;\r\n        let curr = queue.shift();\r\n        setTimeout(() => markVisited(curr),time);\r\n        time+=t;\r\n        if (curr[0] === end[0] && curr[1] === end[1]) {\r\n          curr = prev[curr[0]][curr[1]];\r\n          let st =[];\r\n          st.push(curr);\r\n          while (true) {\r\n            let temp = curr;\r\n            st.push(temp);\r\n            if (curr === start) {\r\n              for(let j=st.length-1;j>=0;j--){\r\n                setTimeout(() => markPath(st[j]),time);\r\n                time+=t;\r\n              }\r\n              return;\r\n            }\r\n            curr = prev[curr[0]][curr[1]];\r\n          }\r\n        }\r\n          for (let i = 0; i < direction; i++) {\r\n            let next = [curr[0] + dx[i], curr[1] + dy[i]];\r\n            if (\r\n              next[0] >= 0 &&\r\n              next[0] < ROW_SIZE &&\r\n              next[1] >= 0 &&\r\n              next[1] < COLUMN_SIZE &&\r\n              !board[next[0]][next[1]].isWall &&\r\n              !board[next[0]][next[1]].isVisited &&\r\n              dist[next[0]][next[1]] > 1+ dist[curr[0]][curr[1]]\r\n            ) {\r\n              console.log(next[0]+\" \"+next[1]);\r\n              queue.push(next);\r\n              prev[next[0]][next[1]] = curr;\r\n              xxdist[next[0]][next[1]] = xxdist[curr[0]][curr[1]]+ 1;\r\n              let c = xxdist[next[0]][next[1]];\r\n              dist[next[0]][next[1]] = distance(next[0],next[1]) + c;\r\n              setTimeout(() => markExplored(next),time);\r\n              time+=t;\r\n            }\r\n          }\r\n      }\r\n      setTimeout(() => markPath(start),time);\r\n      time+=t;\r\n    };\r\n  \r\n  export default astar;","import React, { useState, useEffect } from \"react\";\r\nimport { getSupportedCodeFixes, setSyntheticLeadingComments } from \"typescript\";\r\nimport Node from \"./node\";\r\nimport Bfs from \"./bfs\";\r\nimport Greedy from \"./Greedy\";\r\nimport Astar from \"./Astar\";\r\n\r\nconst ROWS = 15;\r\nconst COL = 49;\r\n\r\n\r\nfunction Grid(){\r\n    \r\n    const [c,setC]=useState(false);\r\n    const [d,setD]=useState(false);\r\n    const arr=[];    \r\n    const [time,setTime]=useState(10);\r\n    const [speed,setSpeed]=useState(\"Normal\");\r\n    const [dtext,setDtext]= useState(\"No Diagonal Moves\");\r\n    const [direction,setDirection] = useState(4);\r\n    for(let i=0;i<ROWS;i++){\r\n        const eachrow=[]\r\n        for(let j=0;j<COL;j++){\r\n            eachrow.push({\r\n                rowid: i,\r\n                colid: j,\r\n                isVisited: false,\r\n                isStart: false,\r\n                isEnd: false,\r\n                isWall: false,\r\n                isExplored: false,\r\n                ispath: false,\r\n                parent: [],\r\n                bool: false\r\n            });\r\n        }\r\n        arr.push(eachrow);\r\n    }\r\n    //start and end positions\r\n    arr[7][5].isStart=true;\r\n    arr[7][38].isEnd=true;\r\n    const [grid,setGrid]= useState(arr);\r\n    const [bool,setBool]= useState(false);\r\n    \r\n    const [test, setTest] = useState(0);\r\n    //for walls display\r\n    function handleClick([i,j]){\r\n        grid[i][j].isWall^=true;\r\n        setGrid(grid);\r\n        setTest(Math.random());   \r\n    }\r\n    //speed check\r\n    function speedcheck(){\r\n        if(speed===\"Normal\"){\r\n            setSpeed(\"Fast\");\r\n            setTime(10);\r\n        }\r\n        else if(speed===\"Fast\"){\r\n            setSpeed(\"Slow\");\r\n            setTime(100);\r\n        }\r\n        else{\r\n            setSpeed(\"Normal\");\r\n            setTime(50)\r\n        }\r\n    }\r\n    //direction DIAGONAL moves\r\n    function dchange(){\r\n        if(dtext===\"No Diagonal Moves\"){\r\n            setDtext(\"Diagonal Moves allowed\");\r\n            setDirection(8);\r\n        }\r\n        else{\r\n            setDtext(\"No Diagonal Moves\");\r\n            setDirection(4);\r\n        }\r\n    }\r\n    //display walls and move center thing\r\n    function togst([i,j]){\r\n        grid[i][j].isStart^=true;\r\n        for(let x=0;x<ROWS;x++){\r\n            for(let y=0;y<COL;y++){\r\n                if(i!=x || j!=y){\r\n                    grid[x][y].isStart=false;\r\n                }\r\n            }\r\n        }\r\n        setGrid(grid);\r\n        setTest(Math.random());\r\n    }\r\n    function togen([i,j]){\r\n        grid[i][j].isEnd^=true;\r\n        for(let x=0;x<ROWS;x++){\r\n            for(let y=0;y<COL;y++){\r\n                if(i!=x || j!=y){\r\n                    grid[x][y].isEnd=false;\r\n                }\r\n            }\r\n        }\r\n        setGrid(grid);\r\n        setTest(Math.random());\r\n    }\r\n    function setcv(val){\r\n        setC(val);\r\n        setTest(Math.random());\r\n    }\r\n    function setdv(val){\r\n        setD(val);\r\n        setTest(Math.random());\r\n    }\r\n    function f(a){\r\n        setBool(a);\r\n    }\r\n    function clr(grid){\r\n        console.log(\"working\");\r\n        for(let i=0;i<ROWS;i++){\r\n            for(let j=0;j<COL;j++){\r\n                grid[i][j].isExplored=false;\r\n                grid[i][j].isVisited=false;\r\n                grid[i][j].ispath=false;\r\n            }\r\n        }\r\n        setTest(Math.random());\r\n        setGrid(grid);\r\n        setTest(Math.random());\r\n        return true;\r\n    }\r\n    //reset board\r\n    function resboard(){\r\n        const arr=[];    \r\n        for(let i=0;i<ROWS;i++){\r\n            const eachrow=[]\r\n            for(let j=0;j<COL;j++){\r\n                eachrow.push({\r\n                    rowid: i,\r\n                    colid: j,\r\n                    isVisited: false,\r\n                    isStart: false,\r\n                    isEnd: false,\r\n                    isWall: false,\r\n                    isExplored: false,\r\n                    ispath: false,\r\n                    parent: [],\r\n                    bool: false\r\n                });\r\n            }\r\n            arr.push(eachrow);\r\n        }\r\n        //start and end positions\r\n        arr[7][5].isStart=true;\r\n        arr[7][38].isEnd=true;\r\n        setGrid(arr);\r\n        setTest(Math.random());\r\n    }\r\n\r\n    function markVis([i,j]){\r\n        if(!grid[i][j].isStart && !grid[i][j].isEnd)\r\n        {\r\n            grid[i][j].isVisited=true;\r\n            grid[i][j].isExplored=false;\r\n            setGrid(grid);\r\n            setTest(Math.random());\r\n        }\r\n        setTest(Math.random());  \r\n    }\r\n    function markexplored([i,j]){\r\n        if(!grid[i][j].isStart && !grid[i][j].isEnd)\r\n        {\r\n            grid[i][j].isExplored=true;\r\n            setGrid(grid);\r\n            setTest(Math.random());\r\n        }\r\n        setTest(Math.random());\r\n    }\r\n    function markpath([i,j]){\r\n        if(!grid[i][j].isStart)\r\n        {\r\n            grid[i][j].isExplored=false;\r\n            grid[i][j].ispath=true;\r\n            setGrid(grid);\r\n            setTest(Math.random());\r\n        }\r\n        setTest(Math.random());\r\n    }\r\n    \r\n    //main return call for grid and button display\r\n    return (\r\n    <div>\r\n        {grid.map((row,rowid) => {\r\n            return (<div className=\"erow\">\r\n                {row.map((col,colid) => {\r\n                    return (\r\n                        <Node \r\n                            rowid={grid[rowid][colid].rowid}\r\n                            colid={grid[rowid][colid].colid}\r\n                            isStart={grid[rowid][colid].isStart}\r\n                            isEnd={grid[rowid][colid].isEnd}\r\n                            isVisited={grid[rowid][colid].isVisited}\r\n                            isWall={grid[rowid][colid].isWall}\r\n                            isExplored={grid[rowid][colid].isExplored}\r\n                            ispath={grid[rowid][colid].ispath}\r\n                            parent={grid[rowid][colid].parent}\r\n                            bool={bool}\r\n                            setbool={f} \r\n                            Clicks={handleClick}\r\n                            togen={togen}\r\n                            togst={togst}\r\n                            c={c}\r\n                            d={d}\r\n                            setc={setcv}\r\n                            setd={setdv}\r\n                        />\r\n                    );\r\n                })\r\n                }\r\n            </div>)\r\n            }\r\n        )\r\n        }\r\n        <div className=\"bot\">\r\n            <div className=\"botli\" onClick={() => dchange()}><a className=\"x\">{dtext}</a></div>\r\n            <div className=\"botli\" onClick={() => speedcheck()}><a className=\"x\">{speed}</a></div>\r\n            <div className=\"botli algo\" onClick={() => clr(grid) && Bfs(grid,markVis,markexplored,markpath,time, direction)}><a  className=\"x\" >Dijkstra Algorithm</a></div>\r\n            <div className=\"botli algo\" onClick={() => clr(grid) && Greedy(grid,markVis,markexplored,markpath,time, direction)}><a  className=\"x\" >Greedy-Best First Search</a></div>\r\n            <div className=\"botli algo\" onClick={() => clr(grid) && Astar(grid,markVis,markexplored,markpath,time, direction)}><a  className=\"x\" >A-star Algorithm</a> </div>\r\n            <div className=\"botli\" onClick={() => resboard()}><a  className=\"x\" >Reset Board</a></div>\r\n            <div className=\"botli\" onClick={() => clr(grid)}><a className=\"x\" >Clear</a></div>\r\n            {/* <li className=\"left botli\"><a className=\"botlia0\" onClick={() => clr(grid) && Bfs(grid,markVis,markexplored,markpath,time)}>Dijkstra Algorithm</a></li>\r\n            <li className=\"botli\"><a className=\"botlia1\" onClick={() => clr(grid) && Greedy(grid,markVis,markexplored,markpath,time)}>Greedy-Best First Search</a></li>\r\n            <li className=\"botli\"><a className=\"botlia2\" onClick={() => resboard()}>Reset Board</a></li>\r\n            <li className=\"botli\"><a class=\"botlia3\" onClick={() => clr(grid)}>Clear</a></li>\r\n            <li className=\"botli main\">\r\n                <a className=\"visualizebtn\" onClick={() => clr(grid) && Astar(grid,markVis,markexplored,markpath,time)}>A-star Algorithm</a> \r\n            </li> */}\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\nexport default Grid;","import React from \"react\";\nimport Grid from \"./Grid\";\n\n// const grid=[];\n\nfunction App() {\n  return (\n  <div>\n    <Grid />\n  </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}